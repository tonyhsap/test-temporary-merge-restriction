name: Update Branch Protection

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Enable, disable, or get restrict updates"
        required: true
        default: "get"
        type: choice
        options:
          - enable
          - disable
          - get

jobs:
  update-branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.ADMIN_PAT }}" | gh auth login --with-token
      - name: Get Default Branch
        run: |
          DEFAULT_BRANCH=$(gh api repos/${{ github.repository }} --jq '.default_branch')
          echo "Default branch is: $DEFAULT_BRANCH"
          echo "Checking if $DEFAULT_BRANCH branch is protected..."
          gh api repos/${{ github.repository }}/branches/$DEFAULT_BRANCH/protection \
          --header "Accept: application/vnd.github.v3+json" || echo "Branch $DEFAULT_BRANCH not protected or not found."
      - name: Fetch Ruleset ID for Main Branch
        id: fetch-ruleset
        run: |
          DEFAULT_BRANCH=$(gh api repos/${{ github.repository }} --jq '.default_branch')
          echo "Default branch is: $DEFAULT_BRANCH"
          echo "Fetching ruleset for default branch..."
          RULESET_RESPONSE=$(gh api repos/${{ github.repository }}/rules/branches/$DEFAULT_BRANCH --jq '.')
          echo "$RULESET_RESPONSE" > ruleset.json
          RULESET_ID=$(echo "$RULESET_RESPONSE" | jq -r '.[0].ruleset_id')
          echo "Ruleset ID: $RULESET_ID"
          echo "ruleset_id=$RULESET_ID" >> $GITHUB_ENV

      - name: Modify Ruleset to Remove Update
        run: |
          echo "Fetching full ruleset details for ID ${{ env.ruleset_id }}..."
          gh api repos/${{ github.repository }}/rulesets/${{ env.ruleset_id }} --jq '.' > original_ruleset.json
          
          echo "Modifying rules to remove 'type: update'..."
          jq 'del(.rules[] | select(.type == "update"))' original_ruleset.json > updated_ruleset.json
          echo "Updated ruleset:"
          cat updated_ruleset.json

      - name: Update Ruleset via API
        run: |
          echo "Sending updated ruleset back to GitHub..."
          gh api repos/${{ github.repository }}/rulesets/${{ env.ruleset_id }} --method PUT --input updated_ruleset.json

      - name: Verify Updated Ruleset
        run: |
          echo "Verifying updated ruleset for ID ${{ env.ruleset_id }}..."
          gh api repos/${{ github.repository }}/rulesets/${{ env.ruleset_id }} --jq '.rules'
      
      - name: Perform Action
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_PAT }}
        run: |
          REPO="tonyhsap/test-temporary-merge-restriction" # Replace with your GitHub username and repository name
          BRANCH="main" # Replace with your branch name
          ACTION="${{ github.event.inputs.action }}"

          if [ "$ACTION" == "get" ]; then
            echo "Getting current branch protection rules..."
            gh api repos/${{ github.repository }}/branches/$BRANCH/protection \
            --header "Accept: application/vnd.github.v3+json" \
            --header "User-Agent: GitHubActions" | jq .
          fi

          if [ "$ACTION" == "enable" ]; then
            gh api -X PUT repos/$REPO/branches/$BRANCH/protection -H "Accept: application/vnd.github.v3+json" -f required_status_checks=null -f enforce_admins=false -f required_pull_request_reviews=null -f restrictions='{"users":[],"teams":[],"apps":[]}' -f allow_force_pushes=false -f allow_deletions=false -f required_linear_history=false -f block_creations=false -f required_conversation_resolution=false -f lock_branch=false -f allow_fork_syncing=false -f required_signatures=false
            echo "Restrict updates enabled."
          elif [ "$ACTION" == "disable" ]; then
            gh api -X PUT repos/$REPO/branches/$BRANCH/protection -H "Accept: application/vnd.github.v3+json" -f required_status_checks=null -f enforce_admins=false -f required_pull_request_reviews=null -f restrictions=null -f allow_force_pushes=false -f allow_deletions=false -f required_linear_history=false -f block_creations=false -f required_conversation_resolution=false -f lock_branch=false -f allow_fork_syncing=false -f required_signatures=false
            echo "Restrict updates disabled."
          else
            echo "Invalid action. Use 'enable', 'disable', or 'get'."
            exit 1
          fi
