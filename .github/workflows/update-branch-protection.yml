name: Update Branch Protection

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Enable, disable, or get restrict updates"
        required: true
        default: "get"
        type: choice
        options:
          - enable
          - disable
          - get

jobs:
  update-branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.ADMIN_PAT }}" | gh auth login --with-token
      - name: Get Default Branch
        run: |
          DEFAULT_BRANCH=$(gh api repos/${{ github.repository }} --jq '.default_branch')
          echo "Default branch is: $DEFAULT_BRANCH"
          echo "Checking if $DEFAULT_BRANCH branch is protected..."
          gh api repos/${{ github.repository }}/branches/$DEFAULT_BRANCH/protection \
          --header "Accept: application/vnd.github.v3+json" || echo "Branch $DEFAULT_BRANCH not protected or not found."
      - name: Fetch All Rulesets
        run: |
          echo "Fetching all rulesets for repository: ${{ github.repository }}..."
          gh api repos/${{ github.repository }}/rulesets --jq '.' > rulesets.json
          echo "Rulesets JSON saved. Raw output:"
          cat rulesets.json

      - name: Parse Rulesets
        run: |
          echo "Parsing rulesets to extract relevant information..."
          jq '.[] | {name: .name, applies_to: .target, created_at: .created_at}' rulesets.json > parsed_rulesets.json
          echo "Parsed rulesets:"
          cat parsed_rulesets.json

      - name: Fetch Rulesets and Restrict Updates
        run: |
          echo "Fetching rulesets including restrict updates setting..."
          gh api repos/${{ github.repository }}/rulesets --jq '.[] | {name: .name, restrict_updates: .bypass_actors}' > rulesets_with_restrict.json
          echo "Rulesets with restrict updates:"
          cat rulesets_with_restrict.json

      - name: Perform Action
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_PAT }}
        run: |
          REPO="tonyhsap/test-temporary-merge-restriction" # Replace with your GitHub username and repository name
          BRANCH="main" # Replace with your branch name
          ACTION="${{ github.event.inputs.action }}"

          if [ "$ACTION" == "get" ]; then
            echo "Getting current branch protection rules..."
            gh api repos/${{ github.repository }}/branches/$BRANCH/protection \
            --header "Accept: application/vnd.github.v3+json" \
            --header "User-Agent: GitHubActions" | jq .
          fi

          if [ "$ACTION" == "enable" ]; then
            gh api -X PUT repos/$REPO/branches/$BRANCH/protection -H "Accept: application/vnd.github.v3+json" -f required_status_checks=null -f enforce_admins=false -f required_pull_request_reviews=null -f restrictions='{"users":[],"teams":[],"apps":[]}' -f allow_force_pushes=false -f allow_deletions=false -f required_linear_history=false -f block_creations=false -f required_conversation_resolution=false -f lock_branch=false -f allow_fork_syncing=false -f required_signatures=false
            echo "Restrict updates enabled."
          elif [ "$ACTION" == "disable" ]; then
            gh api -X PUT repos/$REPO/branches/$BRANCH/protection -H "Accept: application/vnd.github.v3+json" -f required_status_checks=null -f enforce_admins=false -f required_pull_request_reviews=null -f restrictions=null -f allow_force_pushes=false -f allow_deletions=false -f required_linear_history=false -f block_creations=false -f required_conversation_resolution=false -f lock_branch=false -f allow_fork_syncing=false -f required_signatures=false
            echo "Restrict updates disabled."
          else
            echo "Invalid action. Use 'enable', 'disable', or 'get'."
            exit 1
          fi
