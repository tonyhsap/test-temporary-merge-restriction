name: Update Branch Protection

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Enable, disable, or get restrict updates"
        required: true
        default: "get"
        type: choice
        options:
          - enable
          - disable
          - get

jobs:
  update-branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.ADMIN_PAT }}" | gh auth login --with-token
      - name: Get Default Branch
        run: |
          DEFAULT_BRANCH=$(gh api repos/${{ github.repository }} --jq '.default_branch')
          echo "Default branch is: $DEFAULT_BRANCH"
          echo "Checking if $DEFAULT_BRANCH branch is protected..."
          gh api repos/${{ github.repository }}/branches/$DEFAULT_BRANCH/protection \
          --header "Accept: application/vnd.github.v3+json" || echo "Branch $DEFAULT_BRANCH not protected or not found."
      - name: Fetch Ruleset ID for Main Branch
        id: fetch-ruleset
        run: |
          DEFAULT_BRANCH=$(gh api repos/${{ github.repository }} --jq '.default_branch')
          echo "Default branch is: $DEFAULT_BRANCH"
          echo "Fetching ruleset for default branch..."
          RULESET_RESPONSE=$(gh api repos/${{ github.repository }}/rules/branches/$DEFAULT_BRANCH --jq '.')
          echo "$RULESET_RESPONSE" > ruleset.json
          RULESET_ID=$(echo "$RULESET_RESPONSE" | jq -r '.[0].ruleset_id')
          echo "Ruleset ID: $RULESET_ID"
          echo "ruleset_id=$RULESET_ID" >> $GITHUB_ENV

      - name: Modify Ruleset to Remove Update
        run: |
          echo "Fetching full ruleset details for ID ${{ env.ruleset_id }}..."
          gh api repos/${{ github.repository }}/rulesets/${{ env.ruleset_id }} --jq '.' > original_ruleset.json
          echo "Original ruleset:"
          cat original_ruleset.json

          if [[ "${{ github.event.inputs.action }}" == "disable" ]]; then
            echo "Remove 'type: update'..."
            jq 'del(.rules[] | select(.type == "update"))' original_ruleset.json > updated_ruleset.json
            echo "Updated ruleset:"
            cat updated_ruleset.json
          elif [[ "${{ github.event.inputs.action }}" == "enable" ]]; then
            echo "Adding 'type: update'..."
            jq '.rules += [{"type": "update"}]' original_ruleset.json > updated_ruleset.json
            echo "Updated ruleset:"
            cat updated_ruleset.json
          fi

      - name: Update Ruleset via API
        if: ${{ github.event.inputs.action == 'enable' || github.event.inputs.action == 'disable' }}
        run: |
          echo "Sending updated ruleset back to GitHub..."
          gh api repos/${{ github.repository }}/rulesets/${{ env.ruleset_id }} --method PUT --input updated_ruleset.json

      - name: Verify Updated Ruleset
        if: ${{ github.event.inputs.action == 'enable' || github.event.inputs.action == 'disable' }}
        run: |
          echo "Verifying updated ruleset for ID ${{ env.ruleset_id }}..."
          gh api repos/${{ github.repository }}/rulesets/${{ env.ruleset_id }} --jq '.rules'
